{"version":3,"sources":["constants/ActionTypes.js","reducers/todos.js","constants/TodoFilters.js","reducers/visibilityFilter.js","reducers/index.js","constants/breakpoints.js","components/AddTodo/AddTodo.js","actionsCreator/index.js","selectors/index.js","containers/AddTodo/AddTodo.js","components/Todo/Todo.js","components/Todos/Todos.js","containers/Todos/Todos.js","components/Filter/Filter.js","containers/Filter/Filter.js","components/FunctionColumn/FunctionColumn.js","containers/FunctionColumn/FunctionColumn.js","components/TodoApp/TodoApp.js","index.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","TOGGLE_TODO","TOGGLE_ALL_TODOS","CLEAR_COMPLETED","SET_VISIBILITY_FILTER","id","initialState","window","localStorage","getItem","JSON","parse","length","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","visibilityFilter","state","filterTypes","type","payload","filter","rootReducer","combineReducers","todos","content","isDone","todo","map","areAllCompleted","every","MEDIA_QUERY_MD","Container","InputContainer","Underline","Input","Reminder","ToggleAllButton","$checked","getCompletedTodoCount","reduce","count","getVisibleTodos","connect","todosCount","completedCount","dispatch","addTodo","types","toggleAllTodos","useState","input","setInput","onClick","value","onKeyDown","e","target","key","onChange","placeholder","props","theme","Checkbox","Content","InputContent","Buttons","DeleteButton","EditButton","DeleteIcon","CheckIcon","PenIcon","Todo","deleteTodo","editTodo","toggleTodo","inputValue","setInputValue","isEditMode","setIsEditModeMode","inputRef","useRef","useEffect","current","focus","handleChangeTodoState","useCallback","handleEditTodo","handleDeleteTodo","handleChangeMode","className","ref","Todos","TodoFilter","$active","ownProps","active","setVisibiltyFilter","children","Counter","FilterSwitcher","ClearCompletedButton","activeCount","clearCompleted","isOnlyItem","TodoCard","Title","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","TodoApp","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57cc42b3.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\r\nexport const DELETE_TODO = 'DELETE_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const TOGGLE_ALL_TODOS = 'TOGGLE_ALL_TODOS'\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED'\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILTY_FILTER'","import {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  EDIT_TODO,\r\n  TOGGLE_TODO,\r\n  TOGGLE_ALL_TODOS,\r\n  CLEAR_COMPLETED\r\n} from '../constants/ActionTypes'\r\n\r\nlet id = 1\r\n\r\nlet initialState = window.localStorage.getItem('todos') || ''\r\nif (initialState && JSON.parse(initialState).length) {\r\n  initialState = JSON.parse(initialState)\r\n  id = initialState[initialState.length - 1].id + 1\r\n} else {\r\n  initialState = []\r\n}\r\n\r\nexport default function todos(state = initialState, {type, payload}) {\r\n  switch (type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: id++,\r\n          content: payload.content,\r\n          isDone: false\r\n        }\r\n      ]\r\n\r\n    case DELETE_TODO:\r\n      return state.filter(todo =>\r\n        todo.id !== payload.id\r\n      )\r\n\r\n    case EDIT_TODO:\r\n      return state.map(todo =>\r\n        todo.id === payload.id ?\r\n          { ...todo, content: payload.content } :\r\n          todo\r\n      )\r\n\r\n    case TOGGLE_TODO:\r\n      return state.map(todo =>\r\n        todo.id === payload.id ?  \r\n          { ...todo, isDone: !todo.isDone } :\r\n          todo\r\n      )\r\n\r\n    case TOGGLE_ALL_TODOS:\r\n      const areAllCompleted = state.every(todo => todo.isDone)\r\n      return state.map(todo => ({\r\n        ...todo, \r\n        isDone: !areAllCompleted \r\n      }))\r\n\r\n    case CLEAR_COMPLETED:\r\n      return state.filter(todo => !todo.isDone)\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","export const SHOW_ALL = 'show_all'\r\nexport const SHOW_COMPLETED = 'show_completed'\r\nexport const SHOW_ACTIVE = 'show_active'","import { SET_VISIBILITY_FILTER } from '../constants/ActionTypes'\r\nimport * as filterTypes from '../constants/TodoFilters.js'\r\n\r\nconst visibilityFilter = (state = filterTypes.SHOW_ALL, {type, payload}) => {\r\n  switch (type) {\r\n    case SET_VISIBILITY_FILTER:\r\n      return payload.filter\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter\r\n","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nconst rootReducer = combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n\r\nexport default rootReducer","export const MEDIA_QUERY_MD = '@media screen and (max-width: 768px)'","import styled from '@emotion/styled/macro'\r\nimport { useState } from 'react'\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoints'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: strech;\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\n\r\nconst Underline = styled.div`\r\n  position: absolute;\r\n  bottom: -1px;\r\n  left: 50%;\r\n  width: 0;\r\n  height: 2px;\r\n  background-color: #189BA3;\r\n  transition: all 0.2s;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 100%; \r\n  background-color: #FFFDE7;\r\n  border: inherit;\r\n  padding: 10px;\r\n  color: #189BA3;\r\n  font-family: 'Quicksand', \"Microsoft JhengHei\", sans-serif;\r\n  font-size: 20px;\r\n  :focus {\r\n    outline: inherit;\r\n    font-size: 20px;\r\n    & + ${Underline} {\r\n      left: 0;\r\n      width: 100%;      \r\n    }\r\n  }\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 10px;\r\n  }  \r\n`\r\n\r\nconst Reminder = styled.span`\r\n  width: 100px;\r\n  background-color: #189BA3;\r\n  color: #fff;\r\n  font-family: 'Quicksand', \"Microsoft JhengHei\", sans-serif;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: -50px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  opacity: 0;\r\n  transition: all 0.2s;\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: #189BA3 transparent transparent transparent;    \r\n  }\r\n`\r\n\r\nconst ToggleAllButton = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  display: inline-block;\r\n  height: 20px;\r\n  min-width: 20px;\r\n  border: 2px solid #189BA3;\r\n  border-radius: 3px;\r\n  margin-left: 15px;\r\n  margin-right: 10px;\r\n  background-color: ${({ $checked }) => $checked ? '#189BA3' : 'transparent'};\r\n  padding: 0;\r\n  transition: all 0.2s;\r\n  :hover ${Reminder} {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nexport default function AddTodo({ todosCount, completedCount, addTodo, toggleAllTodos }) {\r\n  const [input, setInput] = useState('')\r\n  const handleAddTodo = (e) => {\r\n    const { value } = e.target\r\n    if (e.key !== 'Enter' || !value) return\r\n    addTodo(value)\r\n    setInput('')\r\n  }\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value)\r\n  }\r\n  const handleToggleTodos = () => {\r\n    toggleAllTodos()\r\n  }\r\n  return (\r\n    <Container>\r\n      {!!todosCount && <ToggleAllButton\r\n        $checked={completedCount === todosCount}\r\n        onClick={handleToggleTodos}\r\n      >\r\n        <Reminder>\r\n        {completedCount === todosCount ? '全部未完成' : '全部完成'}\r\n        </Reminder>\r\n      </ToggleAllButton>}\r\n      <InputContainer>\r\n        <Input\r\n          value={input}\r\n          onKeyDown={handleAddTodo}\r\n          onChange={handleChange}\r\n          placeholder=\"Add something to do here <(￣︶￣)>?\"\r\n        />\r\n        <Underline />\r\n      </InputContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\n","import * as types from '../constants/ActionTypes'\r\n\r\nexport const addTodo = (content) => ({ type: types.ADD_TODO, payload: { content } })\r\nexport const deleteTodo = (id) => ({ type: types.DELETE_TODO, payload: { id } })\r\nexport const editTodo = (id, content) => ({ type: types.EDIT_TODO, payload: { id, content } })\r\nexport const toggleTodo = (id) => ({ type: types.TOGGLE_TODO, payload: { id } })\r\nexport const toggleAllTodos = () => ({ type: types.TOGGLE_ALL_TODOS })\r\nexport const clearCompleted = () => ({ type: types.CLEAR_COMPLETED })\r\nexport const setVisibilityFilter = (filter) => ({ type: types.SET_VISIBILITY_FILTER, payload: { filter } })","import { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../constants/TodoFilters'\r\n\r\nexport const getCompletedTodoCount = todos => (\r\n  todos.reduce((count, todo) =>\r\n    todo.isDone ? count + 1 : count,\r\n    0\r\n  )\r\n)\r\n\r\nexport const getVisibleTodos = (todos, visibilityFilter) => {\r\n  switch (visibilityFilter) {\r\n    case SHOW_ALL:\r\n      return todos\r\n\r\n    case SHOW_COMPLETED:\r\n      return todos.filter(todo => todo.isDone)\r\n\r\n    case SHOW_ACTIVE:\r\n      return todos.filter(todo => !todo.isDone)\r\n      \r\n    default:\r\n      return todos\r\n  }\r\n}","import { connect } from 'react-redux'\r\nimport AddTodo from '../../components/AddTodo'\r\nimport { addTodo, toggleAllTodos } from '../../actionsCreator'\r\nimport { getCompletedTodoCount } from '../../selectors'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todosCount: state.todos.length,\r\n  completedCount: getCompletedTodoCount(state.todos)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addTodo: (payload) => {\r\n    dispatch(addTodo(payload))\r\n  },\r\n  toggleAllTodos: () => {\r\n    dispatch(toggleAllTodos())\r\n  },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo)","import styled from '@emotion/styled/macro'\r\nimport { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { ThemeProvider } from '@emotion/react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Container = styled.li`\r\n  position: relative;\r\n  padding: 12px 24px;\r\n  font-size: 20px;\r\n  transition: all 0.2s;\r\n  display: flex;\r\n  align-items: center;\r\n  opacity: ${props => props.theme.isDone? '0.4;' : '1;'}\r\n  :hover {\r\n    background-color:${props => props.theme.isDone? '#FFFDE7;' : 'rgba( 255, 255, 255, 0.9);'} \r\n  }\r\n`\r\n\r\nconst Reminder = styled.span`\r\n  width: 60px;\r\n  background-color: #189BA3;\r\n  color: #fff;\r\n  font-family: 'Quicksand', \"Microsoft JhengHei\", sans-serif;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: -50px;\r\n  left: 50%;\r\n  margin-left: -30px;\r\n  opacity: 0;\r\n  transition: all 0.2s;\r\n  :after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: #189BA3 transparent transparent transparent;    \r\n  }\r\n`\r\n\r\nconst Checkbox = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  display: inline-block;\r\n  height: 20px;\r\n  min-width: 20px;\r\n  border: 2px solid #189BA3;\r\n  border-radius: 3px;\r\n  margin-right: 10px;\r\n  background-color: transparent;\r\n  padding: 0;\r\n  transition: all 0.2s;\r\n  :hover ${Reminder} {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst Content = styled.span`\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 10px 0;\r\n  font-size: 20px;\r\n  :after {\r\n    content: '';\r\n    position: relative;\r\n    top: -12px;\r\n    left: -5%;\r\n    display: ${props => props.theme.isDone? 'block;' : 'none;'}\r\n    width: 110%;\r\n    border-bottom: 1px solid #189BA3;\r\n  }\r\n`\r\n\r\nconst InputContent = styled.input`\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 10px 0;\r\n  font-size: 20px;\r\n  background-color: #FFFDE7;\r\n  font-weight: bold;\r\n  font-family: 'Quicksand';\r\n  padding: 0 0 5px 0;\r\n  color: #189BA3;\r\n  border: inherit;\r\n  border-bottom: 3px solid #189BA3;\r\n  :focus {\r\n    outline: inherit;\r\n  }\r\n  :after {\r\n    content: '';\r\n    position: relative;\r\n    top: -12px;\r\n    left: -5%;\r\n    display: ${props => props.theme.isDone? 'block;' : 'none;'}\r\n    width: 110%;\r\n    border-bottom: 1px solid #189BA3;\r\n  }\r\n`\r\n\r\nconst Buttons = styled.div`\r\n  display: flex;\r\n  margin-left: auto\r\n`\r\n\r\nconst DeleteButton = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  font-size: 20px;\r\n  background-color: transparent;\r\n  border: inherit;\r\n  padding: 0;\r\n  transition: all 0.2s;\r\n  :hover ${Reminder} {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst EditButton = styled.button`\r\n  cursor: pointer;\r\n  position: relative;\r\n  font-size: 20px;\r\n  background-color: transparent;\r\n  border: inherit;\r\n  padding: 0;\r\n  transition: all 0.2s;\r\n  :hover ${Reminder} {\r\n    opacity: 0.8;\r\n  }\r\n`\r\n\r\nconst DeleteIcon = styled.i`\r\n  padding: 2px;\r\n  color: #189BA3;\r\n`\r\n\r\nconst CheckIcon = styled.i`\r\n  padding: 2px;\r\n  color: #189BA3;\r\n  z-index: 1\r\n`\r\nconst PenIcon = styled.i`\r\n  padding: 2px;\r\n  color: #189BA3;\r\n  z-index: 1\r\n`\r\n\r\nfunction Todo({ todo, deleteTodo, editTodo, toggleTodo }) {\r\n  const { id, isDone, content } = todo\r\n  const [ inputValue, setInputValue ] = useState(content)\r\n  const [ isEditMode, setIsEditModeMode ] = useState(false)\r\n  const inputRef = useRef()\r\n\r\n  useEffect(() => {\r\n    if (!isEditMode) return\r\n    inputRef.current.focus()\r\n  }, [isEditMode])\r\n\r\n  const handleChangeTodoState = useCallback(\r\n    () => {\r\n      toggleTodo(id)\r\n    }, [id, toggleTodo])\r\n\r\n  const handleEditTodo = useCallback(\r\n    () => {\r\n      editTodo(id, inputValue)\r\n    }, [id, editTodo, inputValue])\r\n\r\n  const handleDeleteTodo = useCallback(\r\n    () => {\r\n      deleteTodo(id)\r\n    }, [id, deleteTodo])\r\n\r\n  const handleChangeMode = useCallback(\r\n    () => {\r\n      setIsEditModeMode(!isEditMode)\r\n    }, [isEditMode, setIsEditModeMode])\r\n\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n  const theme = {\r\n    isDone\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Container>\r\n        <Checkbox type=\"button\" onClick={handleChangeTodoState}>\r\n          {isDone? <CheckIcon className=\"fas fa-check fa-sm\" /> : <Reminder>完成</Reminder>}\r\n        </Checkbox>\r\n        {isEditMode? \r\n          <InputContent\r\n            ref={inputRef}\r\n            value={inputValue} \r\n            onChange={handleChange}\r\n            onKeyDown={(e) => {\r\n              if (e.key !== 'Enter') return\r\n              handleChangeMode()\r\n              handleEditTodo()\r\n            }}\r\n          /> : <Content>{content}</Content>}\r\n        <Buttons>\r\n          <EditButton\r\n            type=\"button\"\r\n            onClick={() => {\r\n              if (isEditMode) return\r\n              handleChangeMode()\r\n            }}\r\n          > \r\n            <PenIcon className=\"fas fa-pen fa-sm\"></PenIcon>\r\n            <Reminder>編輯</Reminder>\r\n          </EditButton>\r\n          <DeleteButton type=\"button\" onClick={handleDeleteTodo}> \r\n            <DeleteIcon className=\"fas fa-times fa-sm\"></DeleteIcon>\r\n            <Reminder>刪除</Reminder>\r\n          </DeleteButton>\r\n        </Buttons>\r\n      </Container>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n\r\nTodo.propTypes = {\r\n  todo: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      content: PropTypes.string,\r\n      isDone: PropTypes.bool,\r\n      isShow: PropTypes.bool,\r\n    })\r\n};\r\n","import styled from '@emotion/styled/macro'\r\nimport Todo from '../Todo'\r\n\r\nconst Container = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n`\r\n\r\nfunction Todos({ todos, deleteTodo, editTodo, toggleTodo }) {\r\n  return (\r\n    <Container>\r\n      {todos.map((todo) => \r\n        <Todo \r\n          todo={todo} \r\n          key={todo.id}\r\n          deleteTodo={deleteTodo}\r\n          editTodo={editTodo}\r\n          toggleTodo={toggleTodo}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Todos\r\n","import { connect } from 'react-redux'\r\nimport {\r\n  deleteTodo,\r\n  editTodo,\r\n  toggleTodo\r\n} from '../../actionsCreator'\r\nimport Todos from '../../components/Todos'\r\nimport { getVisibleTodos } from '../../selectors'\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteTodo: (id) => {\r\n    dispatch(deleteTodo(id))\r\n  },\r\n  editTodo: (id, content) => {\r\n    dispatch(editTodo(id, content))\r\n  },\r\n  toggleTodo: (id) => {\r\n    dispatch(toggleTodo(id))\r\n  },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos)\r\n","import styled from '@emotion/styled/macro'\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoints'\r\n\r\nconst TodoFilter = styled.button`\r\n  cursor: pointer;\r\n  background: none;\r\n  color: inherit;\r\n  border: 2px solid transparent;\r\n  padding: 0 10px;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: inherit;\r\n  border-color: ${({ $active }) => $active ? 'inherit' : 'transparent'};\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px\r\n  }\r\n`\r\n\r\nexport default function Filter({ active, setVisibiltyFilter, children }) {\r\n  return (\r\n    <TodoFilter\r\n      onClick={setVisibiltyFilter}\r\n      $active={active}\r\n    >\r\n      {children}\r\n    </TodoFilter>\r\n  )\r\n}\r\n","import { connect } from 'react-redux'\r\nimport Filter from '../../components/Filter'\r\nimport { setVisibilityFilter } from '../../actionsCreator'\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: state.visibilityFilter === ownProps.filter\r\n})\r\n\r\nconst mapDidpatchToProps = (dispatch, ownProps) => ({\r\n  setVisibiltyFilter: () => {\r\n    dispatch(setVisibilityFilter(ownProps.filter))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDidpatchToProps)(Filter)","import styled from '@emotion/styled/macro'\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoints'\r\nimport { SHOW_ALL, SHOW_COMPLETED, SHOW_ACTIVE } from '../../constants/TodoFilters'\r\nimport Filter from '../../containers/Filter'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between\r\n`\r\n\r\nconst Counter = styled.div`\r\n  text-align: center;\r\n  \r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterSwitcher = styled.div`\r\n  display: flex;\r\n  justify-content: space-between\r\n`\r\n\r\nconst ClearCompletedButton = styled.button`\r\n  background: none;\r\n  color: inherit;\r\n  border: none;\r\n  padding: 0;\r\n  font: inherit;\r\n  cursor: pointer;\r\n  outline: inherit;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 12px\r\n  }\r\n`\r\n\r\nexport default function FunctionColumn({ activeCount, clearCompleted }) {\r\n  const isOnlyItem = activeCount > 1\r\n  return (\r\n    <Container>\r\n      <Counter>{`${activeCount} ${isOnlyItem ? 'items' : 'item'} left`}</Counter>\r\n      <FilterSwitcher>\r\n        <Filter filter={SHOW_ALL}>All</Filter>\r\n        <Filter filter={SHOW_COMPLETED}>Active</Filter>\r\n        <Filter filter={SHOW_ACTIVE}>Completed</Filter>\r\n      </FilterSwitcher>\r\n      <ClearCompletedButton \r\n        onClick={clearCompleted}\r\n      >\r\n        Clear completed\r\n      </ClearCompletedButton>\r\n    </Container>\r\n  )\r\n}\r\n","import { connect } from 'react-redux'\r\nimport FunctionColumn from '../../components/FunctionColumn'\r\nimport { clearCompleted } from '../../actionsCreator'\r\nimport { getCompletedTodoCount } from '../../selectors'\r\n\r\nconst mapStateToProps = (state) => ({\r\n  activeCount: state.todos.length - getCompletedTodoCount(state.todos)\r\n})\r\n\r\nconst mapDidpatchToProps = (dispatch) => ({\r\n  clearCompleted: () => {\r\n    dispatch(clearCompleted())\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDidpatchToProps)(FunctionColumn)","import styled from '@emotion/styled/macro'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducer from '../../reducers'\r\nimport AddTodo from '../../containers/AddTodo'\r\nimport Todos from '../../containers/Todos'\r\nimport FunctionColumn from '../../containers/FunctionColumn'\r\nimport { MEDIA_QUERY_MD } from '../../constants/breakpoints'\r\n\r\nconst Container = styled.div`\r\n  min-height: 800px;\r\n  height: 100%;\r\n  padding: 10px;\r\n  background-color: #ededed;\r\n`;\r\n\r\nconst TodoCard = styled.div`\r\n  position: relative;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  max-width: 760px;\r\n  background-color: #FFFDE7;\r\n  margin-top: 100px;\r\n  padding: 15px 20px;\r\n  box-shadow: 2px 2px 6px #cccccc;\r\n  color: #189BA3;\r\n  :before,:after {\r\n    content: '';\r\n    position: absolute;\r\n    top: 30px;\r\n    display: block;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n    background-color: #6fc6cc;\r\n    box-shadow: 3px 3px 4px #cccccc;\r\n  }\r\n  :before {\r\n    left: 30px\r\n  }\r\n  :after {\r\n    right: 30px\r\n  }\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-size: 64px;\r\n  margin: 20px 0 15px;\r\n  text-align: center;\r\n\r\n  ${MEDIA_QUERY_MD} {\r\n    font-size: 32px;\r\n  }\r\n`\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\nstore.subscribe(() => {\r\n  window.localStorage.setItem('todos', JSON.stringify(store.getState().todos))\r\n})\r\n\r\nexport default function TodoApp() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Container>\r\n        <TodoCard>\r\n          <Title>Todo List</Title>\r\n          <AddTodo />\r\n          <Todos />\r\n          <FunctionColumn />\r\n        </TodoCard>\r\n      </Container>\r\n    </Provider>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport TodoApp from './components/TodoApp';\r\n\r\nReactDOM.render(\r\n  <TodoApp />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}